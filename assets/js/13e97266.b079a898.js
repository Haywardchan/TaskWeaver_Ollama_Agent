"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7428],{3291:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>h,contentTitle:()=>s,default:()=>p,frontMatter:()=>c,metadata:()=>r,toc:()=>i});var o=n(5893),a=n(1151);const c={},s="Attachment",r={id:"concepts/attachment",title:"Attachment",description:"An attachment is a data concept in TaskWeaver which contains additional data other than the text message in the post.",source:"@site/docs/concepts/attachment.md",sourceDirName:"concepts",slug:"/concepts/attachment",permalink:"/TaskWeaver/docs/concepts/attachment",draft:!1,unlisted:!1,editUrl:"https://github.com/microsoft/TaskWeaver/tree/main/website/docs/concepts/attachment.md",tags:[],version:"current",frontMatter:{},sidebar:"documentSidebar",previous:{title:"Post",permalink:"/TaskWeaver/docs/concepts/post"},next:{title:"Role",permalink:"/TaskWeaver/docs/concepts/role"}},h={},i=[];function d(t){const e={code:"code",h1:"h1",p:"p",pre:"pre",...(0,a.a)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"attachment",children:"Attachment"}),"\n",(0,o.jsx)(e.p,{children:"An attachment is a data concept in TaskWeaver which contains additional data other than the text message in the post."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:'@dataclass\nclass Attachment:\n    """Attachment is the unified interface for responses attached to the text massage.\n\n    Args:\n        type: the type of the attachment, which can be "thought", "code", "markdown", or "execution_result".\n        content: the content of the response element.\n        id: the unique id of the response element.\n    """\n\n    id: str\n    type: AttachmentType\n    content: str\n    extra: Optional[Any] = None\n'})}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.code,{children:"AttachmentType"}),' is an Enum class that contains the types of the attachment, which can be "thought", "code", "markdown", or "execution_result".\nAmong the types, "board" is used to store the information in the board of the round.\nWhen the type is set to "board", the ',(0,o.jsx)(e.code,{children:"content"})," will be updated to the key of the board.\n",(0,o.jsx)(e.code,{children:"content"})," is the content of the response element, which can be the code snippet, the markdown text, or the execution result."]})]})}function p(t={}){const{wrapper:e}={...(0,a.a)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(d,{...t})}):d(t)}},1151:(t,e,n)=>{n.d(e,{Z:()=>r,a:()=>s});var o=n(7294);const a={},c=o.createContext(a);function s(t){const e=o.useContext(c);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:s(t.components),o.createElement(c.Provider,{value:e},t.children)}}}]);