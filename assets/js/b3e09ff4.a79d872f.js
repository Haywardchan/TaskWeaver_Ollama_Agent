"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1599],{8788:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var t=s(5893),o=s(1151);const a={},r="Conversation",i={id:"concepts/conversation",title:"Conversation",description:"A conversation is a data concept in TaskWeaver which contains a dialog between the user and the TaskWeaver app.",source:"@site/docs/concepts/conversation.md",sourceDirName:"concepts",slug:"/concepts/conversation",permalink:"/TaskWeaver/docs/concepts/conversation",draft:!1,unlisted:!1,editUrl:"https://github.com/microsoft/TaskWeaver/tree/main/website/docs/concepts/conversation.md",tags:[],version:"current",frontMatter:{},sidebar:"documentSidebar",previous:{title:"Session",permalink:"/TaskWeaver/docs/concepts/session"},next:{title:"Round",permalink:"/TaskWeaver/docs/concepts/round"}},c={},d=[];function l(e){const n={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"conversation",children:"Conversation"}),"\n",(0,t.jsxs)(n.p,{children:["A conversation is a data concept in TaskWeaver which contains a dialog between the user and the TaskWeaver app.\nEach ",(0,t.jsx)(n.a,{href:"/TaskWeaver/docs/concepts/session",children:"session"})," has a corresponding conversation."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'@dataclass\nclass Conversation:\n    """A conversation denotes the interaction with the user, which is a collection of rounds.\n    The conversation is also used to construct the Examples.\n\n    Args:\n        id: the unique id of the conversation.\n        rounds: a list of rounds.\n        plugins: a list of plugins that are used in the conversation.\n        enabled: whether the conversation is enabled, used for Example only.\n    """\n\n    id: str = ""\n    rounds: List[Round] = field(default_factory=list)\n    plugins: List[PluginEntry] = field(default_factory=list)\n    roles: List[str] = field(default_factory=list)\n    enabled: bool = True\n'})}),"\n",(0,t.jsxs)(n.p,{children:["A conversation is a collection of ",(0,t.jsx)(n.a,{href:"/TaskWeaver/docs/concepts/round",children:"rounds"}),", where each round starts with the user's input and ends with the TaskWeaver app's response to the user.\nThe ",(0,t.jsx)(n.code,{children:"plugins"})," are the ",(0,t.jsx)(n.a,{href:"/TaskWeaver/docs/concepts/plugin",children:"plugins"})," available in the conversation, and the ",(0,t.jsx)(n.code,{children:"roles"})," are the ",(0,t.jsx)(n.a,{href:"/TaskWeaver/docs/concepts/role",children:"roles"})," that the conversation is associated with."]}),"\n",(0,t.jsxs)(n.p,{children:["In TaskWeaver, the conversation is also used to store the ",(0,t.jsx)(n.a,{href:"/TaskWeaver/docs/customization/example/",children:"Examples"}),".\nThe examples in the project folder are parsed into Conversations in the memory, and then composed into the prompt\nof the Planner or the CodeInterpreter.\nThe ",(0,t.jsx)(n.code,{children:"enabled"})," flag is used to control if this conversation is presented in the prompt."]})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>i,a:()=>r});var t=s(7294);const o={},a=t.createContext(o);function r(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);